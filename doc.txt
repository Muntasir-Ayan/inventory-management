http://localhost:8000
to check all the docker container:
    docker ps -a
to remove a container:
    docker rm 5a1f2799b


Command:

    docker-compose build

    docker-compose up

    docker-compose down 

execution:
    docker-compose exec web python manage.py makemigrations
    docker-compose exec web python manage.py migrate

bash terminal open:
    docker-compose exec web python manage.py shell

creating superuser:
    docker-compose exec web python manage.py createsuperuser
importing:
    from django.contrib.auth.models import User
    from django.contrib.gis.geos import Point
    from inventory.models import Location, Accommodation, LocalizeAccommodation

sitemap_generations:
    docker exec -it inventory-management-web-1 python manage.py sitemap_generator


Data addding:

    from inventory.models import Location, Accommodation, LocalizeAccommodation
    from django.contrib.auth.models import User
    from django.contrib.gis.geos import Point


Testing:
    docker-compose exec web coverage run manage.py test
    docker-compose exec web coverage report
    docker-compose exec web coverage html

data adding:
    docker-compose exec web python manage.py add_data


# Create Location Instances
continent = Location.objects.create(
    id="LOC001",
    title="North America",
    center=Point(-100.0, 45.0),
    location_type="continent",
    country_code="",
    state_abbr="",
    city="",
)

country = Location.objects.create(
    id="LOC002",
    title="United States",
    center=Point(-95.7129, 37.0902),
    location_type="country",
    country_code="US",
    parent=continent,
)

state = Location.objects.create(
    id="LOC003",
    title="California",
    center=Point(-119.4179, 36.7783),
    location_type="state",
    country_code="US",
    state_abbr="CA",
    parent=country,
)

city = Location.objects.create(
    id="LOC004",
    title="San Francisco",
    center=Point(-122.4194, 37.7749),
    location_type="city",
    country_code="US",
    state_abbr="CA",
    city="San Francisco",
    parent=state,
)

# Create a User
user = User.objects.create_user(username="demo_user", password="password123")

# Create Accommodation Instances
accommodation = Accommodation.objects.create(
    id="ACM001",
    feed=1,
    title="Luxury Apartment in San Francisco",
    country_code="US",
    bedroom_count=3,
    review_score=4.5,
    usd_rate=250.00,
    center=Point(-122.4194, 37.7749),
    images={"exterior": "exterior.jpg", "interior": "interior.jpg"},
    location=city,
    amenities=["WiFi", "Parking", "Swimming Pool"],
    user=user,
    published=True,
)

# Create Localized Accommodation Instances
localization_en = LocalizeAccommodation.objects.create(
    property=accommodation,
    language="en",
    description="Beautiful apartment with stunning views of San Francisco.",
    policy={"cancellation": "Free cancellation within 48 hours."},
)

localization_es = LocalizeAccommodation.objects.create(
    property=accommodation,
    language="es",
    description="Hermoso apartamento con vistas impresionantes de San Francisco.",
    policy={"cancellation": "Cancelaci√≥n gratuita dentro de las 48 horas."},
)

print("Demo data added successfully.")
